// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bknsystem.privateApi.Models;

namespace bknsystem.privateApi.Migrations
{
    [DbContext(typeof(Datalayer))]
    [Migration("20210225080956_AddedBookingGuestHouse")]
    partial class AddedBookingGuestHouse
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.AddressGuest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("guest_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("latitude")
                        .HasColumnType("int");

                    b.Property<int>("longitude")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("address_guest");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.AmenityGuest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("air_conditioning")
                        .HasColumnType("bit");

                    b.Property<bool>("bathrobes")
                        .HasColumnType("bit");

                    b.Property<bool>("cafeteria")
                        .HasColumnType("bit");

                    b.Property<bool>("dry_cleaning")
                        .HasColumnType("bit");

                    b.Property<bool>("fitness_center")
                        .HasColumnType("bit");

                    b.Property<string>("guest_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("high_chair")
                        .HasColumnType("bit");

                    b.Property<bool>("parking")
                        .HasColumnType("bit");

                    b.Property<bool>("restaurant")
                        .HasColumnType("bit");

                    b.Property<bool>("slipper")
                        .HasColumnType("bit");

                    b.Property<bool>("telephone")
                        .HasColumnType("bit");

                    b.Property<bool>("wakeup_call")
                        .HasColumnType("bit");

                    b.Property<bool>("wifi")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("amenity_guest");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.FileGuest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("file_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("guestHouseid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("guest_id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("guestHouseid");

                    b.ToTable("file_gueset");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.GuestRule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("allow")
                        .HasColumnType("bit");

                    b.Property<string>("guestHouseid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("rule_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("guestHouseid");

                    b.ToTable("guest_rules");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.RatingGuest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("guestHouseid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("guest_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rate")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("guestHouseid");

                    b.ToTable("rating_guest");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.ReviewGuest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("guestHouseid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("guest_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("review")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("guestHouseid");

                    b.ToTable("review_guest");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.RoomGuest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("bath_Rooms")
                        .HasColumnType("int");

                    b.Property<string>("guest_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("room_beds")
                        .HasColumnType("int");

                    b.Property<string>("room_type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("room_guest");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.address", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotel_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotelid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("latitude")
                        .HasColumnType("float");

                    b.Property<double>("longitude")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("hotelid");

                    b.ToTable("address");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.amenity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("air_conditioning")
                        .HasColumnType("bit");

                    b.Property<bool>("bathrobes")
                        .HasColumnType("bit");

                    b.Property<bool>("cafeteria")
                        .HasColumnType("bit");

                    b.Property<bool>("dry_cleaning")
                        .HasColumnType("bit");

                    b.Property<bool>("fitness_center")
                        .HasColumnType("bit");

                    b.Property<bool>("high_chair")
                        .HasColumnType("bit");

                    b.Property<string>("hotel_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("parking")
                        .HasColumnType("bit");

                    b.Property<bool>("restaurant")
                        .HasColumnType("bit");

                    b.Property<bool>("slipper")
                        .HasColumnType("bit");

                    b.Property<bool>("telephone")
                        .HasColumnType("bit");

                    b.Property<bool>("wakeup_call")
                        .HasColumnType("bit");

                    b.Property<bool>("wifi")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("hotel_amenity");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.booking_payment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("payment_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("payment_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("payment_made_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payment_method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payment_reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payment_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("booking_payment");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.check_in_check_out", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("check_in_from")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("check_out_until")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("check_in_check_out");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.extras", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotel_id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("extras");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.file", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("file_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotel_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotelid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("roomid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("hotelid");

                    b.HasIndex("roomid");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.getting_around", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotel_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotelid")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("hotelid");

                    b.ToTable("getting_around");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.guestHouse", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("addressid")
                        .HasColumnType("int");

                    b.Property<int?>("amenitiesid")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("guest_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("roomsid")
                        .HasColumnType("int");

                    b.Property<string>("stars")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("addressid");

                    b.HasIndex("amenitiesid");

                    b.HasIndex("roomsid");

                    b.ToTable("guest_house");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.hotel", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("addressid")
                        .HasColumnType("int");

                    b.Property<int?>("amenitiesid")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotel_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("property_detailid")
                        .HasColumnType("int");

                    b.Property<decimal>("stars")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("addressid");

                    b.HasIndex("amenitiesid");

                    b.HasIndex("property_detailid");

                    b.ToTable("hotel");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.hotel_booking", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("booking_paymentid")
                        .HasColumnType("int");

                    b.Property<string>("booking_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotel_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("room_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("special_requirements")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("booking_paymentid");

                    b.ToTable("hotel_booking");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.house_rule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("check_in_check_outsid")
                        .HasColumnType("int");

                    b.Property<int?>("extrasid")
                        .HasColumnType("int");

                    b.Property<int?>("getting_aroundid")
                        .HasColumnType("int");

                    b.Property<string>("hotel_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotelid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("property_detailsid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("check_in_check_outsid");

                    b.HasIndex("extrasid");

                    b.HasIndex("getting_aroundid");

                    b.HasIndex("hotelid");

                    b.HasIndex("property_detailsid");

                    b.ToTable("house_rule");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.identity.Users", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime>("birth_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("last_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.logs.EventLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Dated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EventLogs");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.logs.SystemLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemLogs");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.logs.UserEventLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LoggedInStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LoggedInTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserBranch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserEventLogs");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.logs.system_exceptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("system_exceptions");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.nearby_hotel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("addressid")
                        .HasColumnType("int");

                    b.Property<string>("hotel_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotelid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("addressid");

                    b.HasIndex("hotelid");

                    b.ToTable("nearby_hotel");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.nearby_place", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("distance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("hotel_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotelid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("hotelid");

                    b.ToTable("nearby_place");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.nearest_essential", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("created_on")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("distance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("hotel_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotelid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("hotelid");

                    b.ToTable("nearest_essential");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.property_detail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("hotel_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("most_recent_renovation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("number_of_floors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("number_of_rooms")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("property_detail");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.rating", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("hotel_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotelid")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("hotelid");

                    b.ToTable("rating");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.review", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("hotel_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotelid")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("hotelid");

                    b.ToTable("review");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.room", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("floor_number")
                        .HasColumnType("int");

                    b.Property<string>("hotel_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotelid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("room_amenityid")
                        .HasColumnType("int");

                    b.Property<int>("room_beds")
                        .HasColumnType("int");

                    b.Property<decimal>("room_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("room_type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("hotelid");

                    b.HasIndex("room_amenityid");

                    b.ToTable("room");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.room_amenity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("air_conditioning")
                        .HasColumnType("bit");

                    b.Property<bool>("bathrobes")
                        .HasColumnType("bit");

                    b.Property<bool>("cafeteria")
                        .HasColumnType("bit");

                    b.Property<bool>("dry_cleaning")
                        .HasColumnType("bit");

                    b.Property<bool>("fitness_center")
                        .HasColumnType("bit");

                    b.Property<bool>("high_chair")
                        .HasColumnType("bit");

                    b.Property<bool>("parking")
                        .HasColumnType("bit");

                    b.Property<bool>("restaurant")
                        .HasColumnType("bit");

                    b.Property<string>("room_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("slipper")
                        .HasColumnType("bit");

                    b.Property<bool>("telephone")
                        .HasColumnType("bit");

                    b.Property<bool>("wakeup_call")
                        .HasColumnType("bit");

                    b.Property<bool>("wifi")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("room_amenity");
                });

            modelBuilder.Entity("martisoor.privateApi_master.Models.guesthouse_booking", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("booking_paymentid")
                        .HasColumnType("int");

                    b.Property<string>("booking_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("guesthouse_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("room_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("special_requirements")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("booking_paymentid");

                    b.ToTable("guesthouse_booking");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.identity.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.identity.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bknsystem.privateApi.Models.identity.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.identity.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.FileGuest", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.guestHouse", null)
                        .WithMany("files")
                        .HasForeignKey("guestHouseid");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.GuestRule", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.guestHouse", null)
                        .WithMany("house_rules")
                        .HasForeignKey("guestHouseid");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.RatingGuest", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.guestHouse", null)
                        .WithMany("ratings")
                        .HasForeignKey("guestHouseid");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.ReviewGuest", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.guestHouse", null)
                        .WithMany("reviews")
                        .HasForeignKey("guestHouseid");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.address", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.hotel", null)
                        .WithMany("addresses")
                        .HasForeignKey("hotelid");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.file", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.hotel", null)
                        .WithMany("files")
                        .HasForeignKey("hotelid");

                    b.HasOne("bknsystem.privateApi.Models.room", null)
                        .WithMany("files")
                        .HasForeignKey("roomid");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.getting_around", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.hotel", null)
                        .WithMany("get_around")
                        .HasForeignKey("hotelid");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.guestHouse", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.AddressGuest", "address")
                        .WithMany()
                        .HasForeignKey("addressid");

                    b.HasOne("bknsystem.privateApi.Models.AmenityGuest", "amenities")
                        .WithMany()
                        .HasForeignKey("amenitiesid");

                    b.HasOne("bknsystem.privateApi.Models.RoomGuest", "rooms")
                        .WithMany()
                        .HasForeignKey("roomsid");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.hotel", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.address", "address")
                        .WithMany()
                        .HasForeignKey("addressid");

                    b.HasOne("bknsystem.privateApi.Models.amenity", "amenities")
                        .WithMany()
                        .HasForeignKey("amenitiesid");

                    b.HasOne("bknsystem.privateApi.Models.property_detail", "property_detail")
                        .WithMany()
                        .HasForeignKey("property_detailid");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.hotel_booking", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.booking_payment", "booking_payment")
                        .WithMany()
                        .HasForeignKey("booking_paymentid");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.house_rule", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.check_in_check_out", "check_in_check_outs")
                        .WithMany()
                        .HasForeignKey("check_in_check_outsid");

                    b.HasOne("bknsystem.privateApi.Models.extras", "extras")
                        .WithMany()
                        .HasForeignKey("extrasid");

                    b.HasOne("bknsystem.privateApi.Models.getting_around", "getting_around")
                        .WithMany()
                        .HasForeignKey("getting_aroundid");

                    b.HasOne("bknsystem.privateApi.Models.hotel", null)
                        .WithMany("house_rules")
                        .HasForeignKey("hotelid");

                    b.HasOne("bknsystem.privateApi.Models.property_detail", "property_details")
                        .WithMany()
                        .HasForeignKey("property_detailsid");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.nearby_hotel", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.address", "address")
                        .WithMany()
                        .HasForeignKey("addressid");

                    b.HasOne("bknsystem.privateApi.Models.hotel", null)
                        .WithMany("nearby_hotels")
                        .HasForeignKey("hotelid");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.nearby_place", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.hotel", null)
                        .WithMany("nearby_places")
                        .HasForeignKey("hotelid");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.nearest_essential", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.hotel", null)
                        .WithMany("nearest_essentials")
                        .HasForeignKey("hotelid");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.rating", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.hotel", null)
                        .WithMany("ratings")
                        .HasForeignKey("hotelid");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.review", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.hotel", null)
                        .WithMany("reviews")
                        .HasForeignKey("hotelid");
                });

            modelBuilder.Entity("bknsystem.privateApi.Models.room", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.hotel", null)
                        .WithMany("rooms")
                        .HasForeignKey("hotelid");

                    b.HasOne("bknsystem.privateApi.Models.room_amenity", "room_amenity")
                        .WithMany()
                        .HasForeignKey("room_amenityid");
                });

            modelBuilder.Entity("martisoor.privateApi_master.Models.guesthouse_booking", b =>
                {
                    b.HasOne("bknsystem.privateApi.Models.booking_payment", "booking_payment")
                        .WithMany()
                        .HasForeignKey("booking_paymentid");
                });
#pragma warning restore 612, 618
        }
    }
}
